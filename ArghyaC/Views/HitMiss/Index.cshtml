@{
    ViewBag.Title = "HitMiss";
}

@model ArghyaC.ViewModels.HmGameViewModel

<h4>So, we have a number (4 digit, no repetition) for you. Try to guess it.</h4>
<h5>Each try result contains >> <kbd>Hit</kbd>: digit(s) correctly guessed | <kbd>Almost</kbd>: correct digit(s); wrong position | <kbd>Re-Hit</kbd>: had hit same digit(s) before!</h5>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    if (Model.IsGameOver)
    {
        <h4 style="color:#65C74A;">Answer : @Model.Answer</h4>
    }
    else
    {
        <h4>The number is _ _ _ _</h4>
    }
    <hr />
    
    if (!Model.IsGameOver)
    { 
        <div class="form-horizontal">
        
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @*<div class="form-group">
                @Html.LabelFor(model => model.First().Entry, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.First().Entry, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.First().Entry, "", new { @class = "text-danger" })
                </div>
            </div>*@
            <div class="form-group">
                <label class="control-label col-md-2" for="Entry">Guess</label>
                <div class="col-md-10">
                    <input class="form-control text-box single-line" data-val="true" data-val-number="The field Entry must be a number." data-val-required="The Entry field is required." id="entry" name="entry" type="number">
                    <span class="field-validation-valid text-danger" data-valmsg-for="Entry" data-valmsg-replace="true"></span>
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Try &raquo;" class="btn btn-primary" />
                </div>
            </div>
        </div>
    }
}

@if (Model.Results.Count >= 5 && !Model.IsGameOver)
{
    using (Html.BeginForm("GiveUp", "HitMiss"))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Give up ?" class="btn btn-warning" />
                </div>
            </div>
        </div>
    }
}

<table class="table">
    <tr>
        <th>
            Tries
        </th>
        <th>
            Entry
        </th>
        <th>
            Hit
        </th>
        <th>
            Almost
        </th>
        <th>
            Re-Hit
        </th>        
    </tr>
@{int k = 0;}
@foreach (var item in Model.Results)
{
    <tr>
        <td>
            <text>@(++k)</text>
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Entry)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Hit)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Almost)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.RepeatHit)
        </td>
    </tr>
}
</table>
